name: Production deploy

concurrency:
  group: production
  cancel-in-progress: true

on:
  push:
    branches:
      - production
    paths-ignore:
      - "**.md"

jobs:
  setup-node_modules:
    name: Setup node_modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version:
          - 16.x
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache dependencies
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            node_modules-

  checks:
    name: Run checks
    needs: [setup-node_modules]
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        node-version:
          - 16.x
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Load node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install

  production-deploy:
    name: Build and Deploy to production
    needs: [checks]
    runs-on: ubuntu-latest
    environment: production
    strategy:
      matrix:
        node-version:
          - 16.x
    permissions:
      contents: "read"
      id-token: "write"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Load node_modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: node_modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm install
      - name: Run build
        env:
          REACT_APP_NODE_ENV: production
          REACT_APP_API_ENDPOINTS: ${{ secrets.REACT_APP_API_ENDPOINTS }}
          REACT_APP_RECAPTCHA_SITE_KEY: ${{ secrets.REACT_APP_RECAPTCHA_SITE_KEY }}
        run: npm run build
      - name: Authorize principal
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      - name: Deploy
        uses: google-github-actions/deploy-appengine@v0
        with:
          deliverables: app.production.yaml
